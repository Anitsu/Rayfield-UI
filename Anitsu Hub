repeat task.wait() until game
--Services: 
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

local Players = game:GetService("Players") 
local Teams = game:GetService("Teams")

local TeleportService = game:GetService("TeleportService")
--Variables: 
local camera = game.Workspace.Camera 
local player = Players.LocalPlayer 
local mouse = player:GetMouse() 

--UI Library Functions: 
local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()
local Window = Rayfield:CreateWindow({
   Name = "Anitsu Hub | Arcane Reborn",
   LoadingTitle = "Anitsu Hub",
   LoadingSubtitle = "by Anitsu",
})

local Tab = Window:CreateTab("Main", 4483362458) 
local LightingSection = Tab:CreateSection("Lighting")

--Lighting Section: 
local NoFogToggle = Tab:CreateToggle({
   Name = "No Fog",
   CurrentValue = false,
   Flag = "No Fog", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not noFog then 
            noFog = true 
            Lighting:FindFirstChild("Atmosphere").Density = 0 
            noFogConnection = Lighting:FindFirstChild("Atmosphere"):GetPropertyChangedSignal("Density"):Connect(function()
                Lighting.Atmosphere.Density = 0 
            end)
        else 
            noFog = false 
            noFogConnection:Disconnect()

            if Lighting:FindFirstChild("Atmosphere") then 
                if Lighting.ClockTime >= 18 or Lighting.ClockTime < 6.5 then 
                    Lighting.Atmosphere.Density = 0.35
                elseif Lighting.ClockTime >= 6.5 or Lighting.ClockTime < 18 then
                    Lighting.Atmosphere.Density = 0.28 
                end
            end
        end 
   end,
})
local NoShadows = Tab:CreateToggle({
   Name = "No Shadows",
   CurrentValue = false,
   Flag = "No Shadows", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if Lighting.GlobalShadows then 
            Lighting.GlobalShadows = false 
        else 
            Lighting.GlobalShadows = true 
        end
   end,
})
local NoDepthOfField = Tab:CreateButton({
   Name = "No Depth Of Field",
   Callback = function()
        if Lighting:FindFirstChild("DepthOfField") then 
            Lighting.DepthOfField:Destroy()
        end
   end,
})
local FullBright = Tab:CreateToggle({
   Name = "Full Bright",
   CurrentValue = false,
   Flag = "Full Bright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not fullBright then 
            fullBright = true 
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            fullBrightConnection = Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            end)
        else 
            fullBright = false 
            fullBrightConnection:Disconnect()
            Lighting.Ambient = Lighting.OutdoorAmbient
        end 
   end,
})
local AlwaysDay = Tab:CreateToggle({
   Name = "Always Day",
   CurrentValue = false,
   Flag = "Always Day", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not alwaysDay then 
            alwaysDay = true 
            Lighting.ClockTime = 10 
            Lighting.TimeOfDay = "10:00:00" 
            alwaysDayConnection = Lighting:GetPropertyChangedSignal("ClockTime"):Connect(function()
                Lighting.ClockTime = 10 
                Lighting.TimeOfDay = "10:00:00" 
            end)
        else 
            alwaysDay = false 
            alwaysDayConnection:Disconnect()
        end 
   end,
})
local NoUnderwaterEffect = Tab:CreateToggle({
   Name = "No Underwater Effect",
   CurrentValue = false,
   Flag = "No Underwater Effect", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not noEffect then 
            noEffect = true 
            Lighting.FogEnd = math.huge 

            noEffectConnection = camera.ChildAdded:Connect(function(child)
                if child.Name == "OceanColor" then 
                    local oceanColor = child 
                    oceanColor.Enabled = false
                end

                if child.Name == "OceanBlur" then 
                    local oceanBlur = child 
                    oceanBlur.Enabled = false 
                end               
            end)

            noEffectConnection = Lighting:GetPropertyChangedSignal("FogEnd"):Connect(function()
                Lighting.FogEnd = math.huge
            end)
        else 
            noEffect = false 
            noEffectConnection:Disconnect()
        end 
   end,
})

--Main Section: 
local MainSection = Tab:CreateSection("Main")
local WalkOnWater = Tab:CreateToggle({
   Name = "Jesus (Walk On Water)",
   CurrentValue = false,
   Flag = "Jesus (Walk On Water)", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not jesus then 
            jesus = true 
            local ocean = workspace.Env.Ocean
            local jesusPart
            jesusConnection = RunService.RenderStepped:Connect(function()
                if not workspace:FindFirstChild("Jesus") then 
                    jesusPart = Instance.new("Part", workspace)
                    jesusPart.Name = "Jesus"
                    jesusPart.Anchored = true 
                    jesusPart.Size = Vector3.new(math.huge, 1, math.huge) 
                    jesusPart.Transparency = 1
                end 
                if player.Character then 
                    local char = player.Character 
                    if char:FindFirstChild("HumanoidRootPart") then 
                        local root = char.HumanoidRootPart
                        jesusPart.Position = Vector3.new(root.Position.X,ocean.Position.Y,root.Position.Z)

                    end 
                end
            end)
        else 
            jesus = false 
            jesusConnection:Disconnect()
            workspace.Jesus:Destroy()
        end 
   end,
})
local InfStamina = Tab:CreateToggle({
   Name = "Infinite Stamina",
   CurrentValue = false,
   Flag = "Infinite Stamina", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not infStam then 
            infStam = true 
            local bin = player.bin 
            local stamina = bin.Stamina 
            stamina.Value = math.huge
            infStamLoop = stamina:GetPropertyChangedSignal("Value"):Connect(function()
                stamina.Value = math.huge
            end)
        else 
            infStam = false 
            infStamLoop:Disconnect()
        end
   end,
})
local InfAir = Tab:CreateToggle({
   Name = "Infinite Air",
   CurrentValue = false,
   Flag = "Infinite Air", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function()
        if not infAir then 
            infAir = true 
            local bin = player.bin 
            local air = bin.Stamina 
            air.Value = math.huge
            infAirLoop = stamina:GetPropertyChangedSignal("Value"):Connect(function()
                air.Value = math.huge
            end)
        else 
            infAir = false 
            infAirLoop:Disconnect()
        end
   end,
})
local AllAnimationPacks = Tab:CreateButton({
   Name = "Get All Animation Packs",
   Callback = function()
        local bin = player.bin 
        for i, v in pairs(bin:GetChildren()) do 
            if string.match(v.Name, "Has") and string.match(v.Name, "Pack") then 
                v.Value = true 
            end
        end 
   end,
})
local RejoinServer = Tab:CreateButton({
   Name = "Rejoin Server",
   Callback = function()
        TeleportService:Teleport(game.PlaceId)
   end,
})
