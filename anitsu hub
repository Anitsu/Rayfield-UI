queueonteleport = (syn and syn.queue_on_teleport) or queue_on_teleport or (fluxus and fluxus.queue_on_teleport)
if game.PlaceId == 3099893649 or game.PlaceId == 4180357500 or game.PlaceId == 4592306011 then --arcane reborn support
    --Disable AC Logging Methods:
    for i,v in pairs(getconnections(game:GetService("ScriptContext").Error)) do
        v:Disable()
    end 
    for i,v in pairs(game.ReplicatedStorage:GetDescendants()) do 
        if v.Name == "Anti" then 
            v:Destroy()
        end 
    end 
    --Whitelist: 
    local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()
    local StarterGui = game:GetService("StarterGui")

    local httpRequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
    --Anti Afk:
    for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do 
        v:Disable()
    end 
    --Services:
    local RunService = game:GetService("RunService")
    local Lighting = game:GetService("Lighting")

    local Players = game:GetService("Players") 
    local Teams = game:GetService("Teams")

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local VirtualInputManager = game:GetService("VirtualInputManager") 

    local TeleportService = game:GetService("TeleportService")
    local TweenService = game:GetService("TweenService")

    local HttpService = game:GetService("HttpService")
    --Variables: 
    local camera = game.Workspace.Camera 
    local player = Players.LocalPlayer 
    local mouse = player:GetMouse() 

    --UI Library Functions: 
    local Window = Rayfield:CreateWindow({
    Name = "Anitsu Hub | Arcane Reborn",
    LoadingTitle = "Anitsu Hub",
    LoadingSubtitle = "by Anitsu",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "Anitsu Hub Configs", 
        FileName = "Anitsu Config [arcane reborn]"
    },
    })

    local Tab = Window:CreateTab("Main") 
    local LightingSection = Tab:CreateSection("Lighting")
    local chargeRemote = ReplicatedStorage.Remotes.Events.Charge
    --Lighting Section: 
    local NoFogToggle = Tab:CreateToggle({
    Name = "No Fog",
    CurrentValue = false,
    Flag = "No Fog", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not noFog then 
            noFog = true 
            if Lighting:FindFirstChild("Atmosphere") then 
                Lighting.Atmosphere.Density = 0
                noFogConnection = Lighting.Atmosphere:GetPropertyChangedSignal("Density"):Connect(function()
                    Lighting.Atmosphere.Density = 0 
                end)
            end
        else 
            noFog = false 
            if noFogConnection then 
                noFogConnection:Disconnect()
            end 
            if Lighting:FindFirstChild("Atmosphere") then 
                if Lighting.ClockTime >= 18 or Lighting.ClockTime < 6.5 then 
                    Lighting.Atmosphere.Density = 0.35
                elseif Lighting.ClockTime >= 6.5 or Lighting.ClockTime < 18 then
                    Lighting.Atmosphere.Density = 0.28 
                end
            elseif Lighting.Storage:FindFirstChild("Atmosphere") then 
                if Lighting.ClockTime >= 18 or Lighting.ClockTime < 6.5 then 
                    Lighting.Storage.Atmosphere.Density = 0.35
                elseif Lighting.ClockTime >= 6.5 or Lighting.ClockTime < 18 then
                    Lighting.Storage.Atmosphere.Density = 0.28 
                end
            end   
        end 
    end,
    })
    --Boss Farm Choice: 
    local bossesOption = {"Marua"}
    local bossesOption2 = {"Rupin"}
    local NoShadows = Tab:CreateToggle({
    Name = "No Shadows",
    CurrentValue = false,
    Flag = "No Shadows", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if Lighting.GlobalShadows then 
            Lighting.GlobalShadows = false 
        else 
            Lighting.GlobalShadows = true 
        end
    end,
    })
    local NoDepthOfField = Tab:CreateButton({
    Name = "No Depth Of Field",
    Callback = function()
        if Lighting:FindFirstChild("DepthOfField") then 
            Lighting.DepthOfField:Destroy()
        end
    end,
    })
    local FullBright = Tab:CreateToggle({
    Name = "Full Bright",
    CurrentValue = false,
    Flag = "Full Bright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not fullBright then 
            fullBright = true 
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            fullBrightConnection = Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            end)
        else 
            fullBright = false 
            fullBrightConnection:Disconnect()
            Lighting.Ambient = Lighting.OutdoorAmbient
        end 
    end,
    })
    local AlwaysDay = Tab:CreateToggle({
    Name = "Always Day",
    CurrentValue = false,
    Flag = "Always Day", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not alwaysDay then 
            alwaysDay = true 
            Lighting.ClockTime = 10 
            Lighting.TimeOfDay = "10:00:00" 
            alwaysDayConnection = Lighting:GetPropertyChangedSignal("ClockTime"):Connect(function()
                Lighting.ClockTime = 10 
                Lighting.TimeOfDay = "10:00:00" 
            end)
        else 
            alwaysDay = false 
            alwaysDayConnection:Disconnect()
        end 
    end,
    })
    local NoUnderwaterEffect = Tab:CreateToggle({
    Name = "No Underwater Effect",
    CurrentValue = false,
    Flag = "No Underwater Effect", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not noEffect then 
            noEffect = true 
            Lighting.FogEnd = math.huge 
            if camera:FindFirstChild("OceanBlur") then 
                camera.OceanBlur.Enabled = false
            end 
            noEffectConnection = camera.ChildAdded:Connect(function(child)
                if child.Name == "OceanColor" then 
                    local oceanColor = child 
                    oceanColor.Enabled = false
                end

                if child.Name == "OceanBlur" then 
                    local oceanBlur = child 
                    oceanBlur.Enabled = false 
                end               
            end)

            noEffectConnection = Lighting:GetPropertyChangedSignal("FogEnd"):Connect(function()
                Lighting.FogEnd = math.huge
            end)
        else 
            noEffect = false 
            noEffectConnection:Disconnect()
        end 
    end,
    })

    --Main Section: 
    local MainSection = Tab:CreateSection("Main")
    local WalkOnWater = Tab:CreateToggle({
    Name = "Jesus (Walk On Water)",
    CurrentValue = false,
    Flag = "Jesus (Walk On Water)", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not jesus then 
            jesus = true 
            local ocean = workspace.Env.Ocean
            local jesusPart
            jesusConnection = RunService.RenderStepped:Connect(function()
                if not workspace:FindFirstChild("Jesus") then 
                    jesusPart = Instance.new("Part", workspace)
                    jesusPart.Name = "Jesus"
                    jesusPart.Anchored = true 
                    jesusPart.Size = Vector3.new(2048, 1, 2048) 
                    jesusPart.Transparency = 1
                end 
                if player.Character then 
                    local char = player.Character 
                    if char:FindFirstChild("HumanoidRootPart") then 
                        local root = char.HumanoidRootPart
                        jesusPart.Position = Vector3.new(root.Position.X,ocean.Position.Y,root.Position.Z)

                    end 
                end
            end)
        else 
            jesus = false 
            jesusConnection:Disconnect()
            workspace.Jesus:Destroy()
        end 
    end,
    })
    local ForceReset = Tab:CreateButton({
    Name = "Force Reset",
    Callback = function()
        if player.Character then 
            local char = player.Character
            if char:FindFirstChild("Humanoid") then 
                char.Humanoid.Health = 0 
            end 
        end 
    end,
    })
    local InfStamina = Tab:CreateToggle({
    Name = "Infinite Stamina",
    CurrentValue = false,
    Flag = "Infinite Stamina", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not infStam then 
            infStam = true 
            local bin = player.bin 
            local stamina = bin.Stamina 
            infStamLoop = RunService.RenderStepped:Connect(function()
                stamina.Value = math.huge
            end)
        else 
            infStam = false 
            infStamLoop:Disconnect()
        end
    end,
    })
    local InfAir = Tab:CreateToggle({
    Name = "Infinite Air",
    CurrentValue = false,
    Flag = "Infinite Air", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not infAir then 
            infAir = true 
            local bin = player.bin 
            local air = bin.Air 
            infAirLoop = RunService.RenderStepped:Connect(function()
                air.Value = math.huge
            end)
        else 
            infAir = false 
            infAirLoop:Disconnect()
        end
    end,
    })
    local AllAnimationPacks = Tab:CreateButton({
    Name = "Get All Animation Packs",
    Callback = function()
        local bin = player.bin 
        for i, v in pairs(bin:GetChildren()) do 
            if string.match(v.Name, "Has") and string.match(v.Name, "Pack") then 
                v.Value = true 
            end
        end 
    end,
    })
    local RejoinServer = Tab:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId,game.JobId)
    end,
    })
    local ServerHop = Tab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local response = httpRequest({Url = "https://games.roblox.com/v1/games/".. game.PlaceId .. "/servers/0?sortOrder=2&excludeFullGames=true&limit=100"})
        local parsed = HttpService:JSONDecode(response.Body)
        local listOfServers = {}
        for i, v in pairs(parsed.data) do 
            local serverJobId = v.id 
            if serverJobId ~= game.JobId then 
                table.insert(listOfServers,serverJobId) 
            end 
        end 
        if #listOfServers == 0 then 
            StarterGui:SetCore("SendNotification", {
                Title = "ERROR";
                Text = "Couldn't find different servers";
                Duration = 3;
            })    
        else 
            local randomServer = math.random(1, #listOfServers) 
            TeleportService:TeleportToPlaceInstance(game.PlaceId,listOfServers[randomServer])        
        end 
    end,
    })
    local IY = Tab:CreateButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
    })
    --ESP Section:
    local ESPSection = Tab:CreateSection("ESP")
    if game.PlaceId ~= 4592306011 then 
        local KrakenESP = Tab:CreateToggle({
        Name = "Kraken ESP",
        CurrentValue = false,
        Flag = "Kraken ESP", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function()
            if not krakenESP then 
                krakenESP = true 
                local enemyFolder = workspace.Enemies 
                local function createKrakenESP()
                    local txt = Drawing.new("Text")
                    txt.Visible = false 
                    txt.Outline = true 
                    txt.Center = true 
                    txt.Color = Color3.new(1,1,1)
                    txt.Font = 2
                    txt.Size = 13.5 
                    krakenESPLoop = RunService.RenderStepped:Connect(function()
                        if not krakenESP then 
                            pcall(function()
                                txt:Remove()
                                krakenESPLoop:Disconnect()
                            end)
                        end 

                        if enemyFolder:FindFirstChild("Kraken") then 
                            local kraken = enemyFolder.Kraken
                            if kraken:FindFirstChild("Head") and kraken:FindFirstChild("Humanoid") then 
                                local head = kraken.Head 
                                local hum = kraken.Humanoid 
                                local headPos,onScreen = camera:WorldToViewportPoint(head.Position)
                                if onScreen then 
                                    txt.Visible = true 
                                    txt.Position = Vector2.new(headPos.X,headPos.Y)
                                    txt.Text = "[Kraken]["..math.floor(player:DistanceFromCharacter(head.Position)).."]\n["..math.floor(hum.Health).."/"..math.floor(hum.MaxHealth).."]"
                                else 
                                    txt.Visible = false 
                                end 
                            end 
                        else 
                            txt.Visible = false  
                        end 
                    end)
                end -- function end 
                for i,v in pairs(enemyFolder:GetChildren()) do 
                    if v.Name == "Kraken" then 
                        createKrakenESP()
                    end 
                end 
                krakenAddedConnection = enemyFolder.ChildAdded:Connect(function(child)
                    if child.Name == "Kraken" then 
                        createKrakenESP()
                    end
                end)
            else 
                krakenESP = false 
                krakenAddedConnection:Disconnect()
            end
        end,
        })    
    end
    local PlayerESP = Tab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "Player ESP", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not plrESP then 
            plrESP = true 
            local function createTextESP(enemyPlayer)
                local drawnESP = Drawing.new("Text")
                drawnESP.Visible = false 
                drawnESP.Center = true 
                drawnESP.Color = Color3.fromRGB(255)
                drawnESP.Outline = true 
                drawnESP.Font = 2
                drawnESP.Size = 13.5
                plrESPLoop = RunService.RenderStepped:Connect(function()    
                    if not plrESP then 
                        pcall(function()
                            drawnESP:Remove()
                            plrESPLoop:Disconnect()
                        end)
                    end
                    if enemyPlayer.Character then 
                        local enemyCharacter = enemyPlayer.Character 
                        if enemyCharacter:FindFirstChild("Head") and enemyCharacter:FindFirstChild("Humanoid") then 
                            local enemyHead = enemyCharacter.Head 
                            local enemyHumanoid = enemyCharacter.Humanoid 
                            local enemyHeadPos, onScreen = camera:WorldToViewportPoint(enemyHead.Position)

                            --ESP For Non-FFA
                            if onScreen and enemyPlayer.Team ~= player.Team and #Teams:GetChildren() > 0  then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y - 35)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen or enemyPlayer.Team == player.Team then 
                                drawnESP.Visible = false 
                            end

                            --ESP For FFA
                            if onScreen and #Teams:GetChildren() == 0 then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen then 
                                drawnESP.Visible = false 
                            end  
                        else 
                            drawnESP.Visible = false                          
                        end
                    else 
                        drawnESP.Visible = false 
                    end
                end)
            end --function end 
            for i, v in pairs(Players:GetPlayers()) do 
                if v ~= player then 
                    createTextESP(v)
                end
            end
            plrAddedConnection = Players.PlayerAdded:Connect(function(enemyPlayer)
                createTextESP(enemyPlayer)
            end)
        else 
            plrESP = false 
            plrAddedConnection:Disconnect()
        end 
    end,
    })
    --Farming Tab:
    local FarmsTab = Window:CreateTab("Farms") 
    local MagicFarm = FarmsTab:CreateToggle({
    Name = "Magic Farm",
    CurrentValue = false,
    Flag = "Magic Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not magicFarm then 
            magicFarm = true 
            local magic = player.bin.Magic.Value 
            local magicPower = player.bin.MagicPower

            local oldNamecall 

            if magicPower.Value < 15 then 
                    StarterGui:SetCore("SendNotification", {
                    Title = "ERROR";
                    Text = "Your magic level has to be more than 15 to use this feature";
                    Duration = 3;
                })        
            end 
            magicFarmLoop = RunService.RenderStepped:Connect(function()
                if magicPower.Value < 15 and magicFarmLoop then 
                    magicFarmLoop:Disconnect()
                end 
                if magicPower.Value > 15 then 
                    if player.Backpack:FindFirstChild(magic) and player.Character then 
                        player.Backpack[magic].Parent = player.Character
                    end 
                    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)
                end
            end)

            local function getMagicType()
                if magic == "Light" or magic == "Lightning" then 
                    return true 
                else 
                    return false
                end
            end

            oldNamecall = hookmetamethod(game, "__namecall", function(event, ...)
                local method = getnamecallmethod()
                if magicFarm and magicPower.Value > 15 and event.Name == magic and method == "FireServer" then 
                    local args = {...}

                    while magicFarm and task.wait() do 
                        if not getMagicType() then
                            local magicEnergy = player.bin.MagicEnergy 
                            local maxMagicEnergy = magicPower.Value * 5 + 25 

                            event.FireServer(event, ...)
                            event.FireServer(event, args[1] + 1, CFrame.new(0, 0, 0))

                            if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                chargeRemote.FireServer(chargeRemote, "Charge") 
                            end 

                            if magicEnergy.Value >= maxMagicEnergy then 
                                chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                            end 
                        end

                        if getMagicType() then
                            local magicEnergy = player.bin.MagicEnergy 
                            local maxMagicEnergy = magicPower.Value * 5 + 25 

                            event.FireServer(event, ...)
                            event.FireServer(event, args[1] + 1, Vector3.new(0, 0, 0), mouse.Target)
                            
                            if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                chargeRemote.FireServer(chargeRemote, "Charge") 
                            end 

                            if magicEnergy.Value >= maxMagicEnergy then 
                                chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                            end 
                        end           
                    end
                end
                return oldNamecall(event, ...)
            end)
        else 
            magicFarm = false 
            magicFarmLoop:Disconnect()
            chargeRemote:FireServer("ChargeEnd")
        end 
    end, 
    })
    local MagicBowFarm = FarmsTab:CreateToggle({
    Name = "Magic Bow Farm",
    CurrentValue = false,
    Flag = "Magic Bow Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not magicBowFarm then 
            magicBowFarm = true 
            local magicPower = player.bin.MagicPower
            local magicEnergy = player.bin.MagicEnergy 
            magicBowFarmLoop = RunService.RenderStepped:Connect(function()
                local maxMagicEnergy = magicPower.Value * 5 + 25 
    
                if player.Character then 
                    local char = player.Character 
                    if player.Backpack:FindFirstChild("Magic Bow") then 
                        player.Backpack["Magic Bow"].Parent = char 
                    end 

                    if char:FindFirstChild("Magic Bow") and char["Magic Bow"]:FindFirstChild("LocalScript") and char["Magic Bow"].LocalScript:FindFirstChild("Magic Bow") then 
                        char["Magic Bow"].LocalScript["Magic Bow"]:FireServer(1,Vector3.new(0,0,0))
                    end
                end 
                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                    chargeRemote.FireServer(chargeRemote, "Charge") 
                end 

                if magicEnergy.Value >= maxMagicEnergy then 
                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                end 
            end)
        else 
            magicBowFarm = false 
            magicBowFarmLoop:Disconnect()
            chargeRemote:FireServer("ChargeEnd")
        end 
    end, 
    })
    if clientid == "A6590D2E-07CD-4408-9BD5-80FAB829A6F5" then 
        local ChestFarm = FarmsTab:CreateToggle({
        Name = "Chest Farm",
        CurrentValue = false,
        Flag = "Chest Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function()
            if not chestFarm then 
                chestFarm = true
                for i,v in pairs(workspace:GetDescendants()) do 
                    if v.Name == "SeaBorder" then 
                        v:Destroy()
                    end 
                    if v:FindFirstChild("Chest") and v:IsA("Folder") then 
                        chestFolder = v 
                    end 
                    if v:IsA("BasePart") then 
                        v.CanCollide = false 
                    end 
                end 
                local function findNearestChest()
                    local target 
                    local distance = math.huge 
                    for i,v in pairs(chestFolder:GetChildren()) do 
                        if v.Name == "Chest" and v:FindFirstChild("Bottom") and v:FindFirstChild("Opened") and not v.Opened.Value and not v:FindFirstChild("isGhost") then 
                            local bottom = v.Bottom 
                            local distanceFromBottom = player:DistanceFromCharacter(bottom.Position)
                            if distanceFromBottom < distance and bottom.Position.Y > -1 then --if chest isn't under the sea then 
                                distance = distanceFromBottom 
                                target = bottom 
                            end 
                        end 
                    end 
                    return target 
                end --function end 

                local remoteKey
                for i,v in pairs(getconnections(game.ReplicatedStorage.Remotes.Events.CH.OnClientEvent)) do 
                    for i,v in ipairs(debug.getupvalues(v.Function)) do 
                        if type(v) == "table" then 
                            for i,v in pairs(v) do 
                                if type(v) == "userdata" then 
                                    remoteKey = debug.getupvalues(getrawmetatable(v).__index)[2]
                                end 
                            end 
                        end 
                    end 
                end 
                chestFarmLoop = RunService.RenderStepped:Connect(function()
                    if player.Character then 
                        for i,v in pairs(player.Character:GetDescendants()) do 
                            if v:IsA("BasePart") and v.CanCollide then 
                                v.CanCollide = false
                            end 
                        end 
                    end 
                end)
                repeat task.wait() 
                    local nearestChest = findNearestChest()
                        if player.Character and nearestChest then 
                            local char = player.Character 

                            if char:FindFirstChild("HumanoidRootPart") then
                                local root = char.HumanoidRootPart 
                                if not root:FindFirstChild("BodyVelocity") then 
                                local bv = Instance.new("BodyVelocity", root)
                                bv.MaxForce = Vector3.new(math.huge,math.huge,math.huge) 
                                bv.Velocity = Vector3.new(0,0,0)  
                            end 

                                local time = player:DistanceFromCharacter(nearestChest.Position) / 50
                                tween = TweenService:Create(root,TweenInfo.new(time), {CFrame = nearestChest.CFrame})
                                tween:Play()
                                ReplicatedStorage.Remotes.Events.ChestOpened:FireServer(nearestChest.Parent,remoteKey,math.random(1,9999),math.random(1,9999))
                            
                            end 
                        end 
                until not chestFarm
            else 
                chestFarm = false 
                repeat task.wait()
                    if player.Character then 
                        local char = player.Character 
                        if char:FindFirstChild("HumanoidRootPart") then
                            local root = char.HumanoidRootPart 
                            if root:FindFirstChild("BodyVelocity") then 
                                root.BodyVelocity:Destroy()
                            end 
                        end
                    end
                    until not player.Character.HumanoidRootPart:FindFirstChild("BodyVelocity")
                    chestFarmLoop:Disconnect()
                    tween:Cancel()
                    if player.Character then 
                        for i,v in pairs(player.Character:GetDescendants()) do 
                            if v:IsA("BasePart") then 
                                v.CanCollide = true
                            end 
                        end 
                    end 
                    for i,v in pairs(workspace:GetDescendants()) do 
                        if v:IsA("BasePart") then 
                            v.CanCollide = true
                        end 
                    end 
                end 
            end 
        })
    end
    if game.PlaceId == 3099893649 then
        local BossFarmDropdown = FarmsTab:CreateDropdown({
        Name = "Bosses",
        Options = {"Marua", "Kraken", "Verdies"},
        CurrentOption = {"Marua"},
        MultipleOptions = false,
        Flag = "Boss Farm Dropdown", 
        Callback = function(Option)
            bossesOption = Option
        end,
        })
        local BossFarm = FarmsTab:CreateToggle({
        Name = "Boss Farm",
        CurrentValue = false,
        Flag = "Boss Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function()
            if not bossFarm then 
                bossFarm = true 
                
                --Variables:
                local enemiesFolder = game.Workspace.Enemies 
                local magic = player.bin.Magic.Value 
                local magicPower = player.bin.MagicPower

                chargeRemote = ReplicatedStorage.Remotes.Events.Charge
                local oldNamecall 

                if magicPower.Value < 15 then 
                    StarterGui:SetCore("SendNotification", {
                        Title = "ERROR";
                        Text = "Your magic level has to be more than 15 to use this feature";
                        Duration = 3;
                    })        
                end             
                bossFarmLoop = RunService.RenderStepped:Connect(function()
                    if magicPower.Value > 15 then 
                        if bossesOption[1] == "Marua" and not enemiesFolder:FindFirstChild("Marua") then 
                            if player.Character then 
                                local char = player.Character 
                                if char:FindFirstChild("HumanoidRootPart") then 
                                    if not char.HumanoidRootPart:FindFirstChild("BodyVelocity") then 
                                        local bodyVel = Instance.new("BodyVelocity", char.HumanoidRootPart)

                                        bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                        bodyVel.Velocity = Vector3.new(0,0,0)
                                    end                          
                                    char.HumanoidRootPart.CFrame = CFrame.new(-1216, 104, 2850)
                                end 
                            end 
                        end 
                        if bossesOption[1] == "Verdies" and not enemiesFolder:FindFirstChild("Verdies") then 
                            if player.Character then 
                                local char = player.Character 
                                if char:FindFirstChild("HumanoidRootPart") then 
                                    if not char.HumanoidRootPart:FindFirstChild("BodyVelocity") then 
                                        local bodyVel = Instance.new("BodyVelocity", char.HumanoidRootPart)

                                        bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                        bodyVel.Velocity = Vector3.new(0,0,0)
                                    end
                                    char.HumanoidRootPart.CFrame = CFrame.new(7893, 1463, 630)
                                end 
                            end 
                        end 

                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)

                        if enemiesFolder:FindFirstChild(bossesOption[1]) and player.Character then 
                            local enemy = enemiesFolder[bossesOption[1]]
                            local character = player.Character

                            if player.Backpack:FindFirstChild(magic) then 
                                player.Backpack[magic].Parent = character 
                            end

                            if enemy:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("HumanoidRootPart") then 
                                local rootPart = character.HumanoidRootPart

                                if not rootPart:FindFirstChild("BodyVelocity") then 
                                    local bodyVel = Instance.new("BodyVelocity", rootPart)

                                    bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                    bodyVel.Velocity = Vector3.new(0,0,0)
                                end

                                local enemyRootPart = enemy.HumanoidRootPart
                                local enemyHumanoid = enemy.Humanoid 

                                if enemyHumanoid.Health <= 0 then 
                                    enemy:Destroy() 
                                end
                                
                                rootPart.CFrame = enemyRootPart.CFrame * CFrame.new(0, 0, 14)
                            end     
                        end
                    end
                end)

                local function getMagicType()
                    if magic == "Light" or magic == "Lightning" then 
                        return true 
                    else 
                        return false
                    end
                end

                oldNamecall = hookmetamethod(game, "__namecall", function(event, ...)
                    local method = getnamecallmethod()
                    if event.Name == magic and method == "FireServer" then 
                        local args = {...}

                        while bossFarm and task.wait() do 
                            if enemiesFolder.FindFirstChild(enemiesFolder, bossesOption[1]) and not getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, CFrame.new(0, 0, 0))

                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end

                            if enemiesFolder.FindFirstChild(enemiesFolder, bossesOption[1]) and getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, Vector3.new(0, 0, 0), mouse.Target)
                            
                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end           
                        end
                    end

                    return oldNamecall(event, ...)
                end)
            
                
            else 
                bossFarm = false 
                repeat task.wait()
                    if player.Character then 
                        local char = player.Character 
                        if char:FindFirstChild("HumanoidRootPart") then
                            local root = char.HumanoidRootPart 
                            if root:FindFirstChild("BodyVelocity") then 
                                root.BodyVelocity:Destroy()
                            end 
                        end
                    end
                until not player.Character.HumanoidRootPart:FindFirstChild("BodyVelocity")
                bossFarmLoop:Disconnect()
                chargeRemote:FireServer("ChargeEnd")
            end
        end, 
        })
    end 
    if game.PlaceId == 4592306011 then 
        local BossFarmDropdown = FarmsTab:CreateDropdown({
        Name = "Bosses",
        Options = {"Rupin", "Amon"},
        CurrentOption = {"Rupin"},
        MultipleOptions = false,
        Flag = "Boss Farm Dropdown", 
        Callback = function(Option)
            bossesOption2 = Option
        end,
        })
        local BossFarm = FarmsTab:CreateToggle({
        Name = "Boss Farm",
        CurrentValue = false,
        Flag = "Boss Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function()
            if not bossFarm then 
                bossFarm = true 
                
                --Variables:
                local enemiesFolder = game.Workspace.Enemies 
                local magic = player.bin.Magic.Value 
                local magicPower = player.bin.MagicPower

                chargeRemote = ReplicatedStorage.Remotes.Events.Charge
                local oldNamecall 

                if magicPower.Value < 15 then 
                    StarterGui:SetCore("SendNotification", {
                        Title = "ERROR";
                        Text = "Your magic level has to be more than 15 to use this feature";
                        Duration = 3;
                    })        
                end             
                bossFarmLoop = RunService.RenderStepped:Connect(function()
                    if magicPower.Value > 15 then 
                        if bossesOption2[1] == "Rupin" and not enemiesFolder:FindFirstChild("Rupin") then 
                            if player.Character then 
                                local char = player.Character 
                                if char:FindFirstChild("HumanoidRootPart") then 
                                    if not char.HumanoidRootPart:FindFirstChild("BodyVelocity") then 
                                        local bodyVel = Instance.new("BodyVelocity", char.HumanoidRootPart)

                                        bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                        bodyVel.Velocity = Vector3.new(0,0,0)
                                    end                          
                                    char.HumanoidRootPart.CFrame = CFrame.new(-3925, 78, 3716)
                                end 
                            end 
                        end 
                        if bossesOption2[1] == "Verdies" and not enemiesFolder:FindFirstChild("Amon") then 
                            if player.Character then 
                                local char = player.Character 
                                if char:FindFirstChild("HumanoidRootPart") then 
                                    if not char.HumanoidRootPart:FindFirstChild("BodyVelocity") then 
                                        local bodyVel = Instance.new("BodyVelocity", char.HumanoidRootPart)

                                        bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                        bodyVel.Velocity = Vector3.new(0,0,0)
                                    end
                                    char.HumanoidRootPart.CFrame = CFrame.new(-5714, 5, 8959)
                                end 
                            end 
                        end 

                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)

                        if enemiesFolder:FindFirstChild(bossesOption2[1]) and player.Character then 
                            local enemy = enemiesFolder[bossesOption2[1]]
                            local character = player.Character

                            if player.Backpack:FindFirstChild(magic) then 
                                player.Backpack[magic].Parent = character 
                            end

                            if enemy:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("HumanoidRootPart") then 
                                local rootPart = character.HumanoidRootPart

                                if not rootPart:FindFirstChild("BodyVelocity") then 
                                    local bodyVel = Instance.new("BodyVelocity", rootPart)

                                    bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                    bodyVel.Velocity = Vector3.new(0,0,0)
                                end

                                local enemyRootPart = enemy.HumanoidRootPart
                                local enemyHumanoid = enemy.Humanoid 

                                if enemyHumanoid.Health <= 0 then 
                                    enemy:Destroy() 
                                end
                                
                                rootPart.CFrame = enemyRootPart.CFrame * CFrame.new(0, 0, 14)
                            end     
                        end
                    end
                end)

                local function getMagicType()
                    if magic == "Light" or magic == "Lightning" then 
                        return true 
                    else 
                        return false
                    end
                end

                oldNamecall = hookmetamethod(game, "__namecall", function(event, ...)
                    local method = getnamecallmethod()
                    if event.Name == magic and method == "FireServer" then 
                        local args = {...}

                        while bossFarm and task.wait() do 
                            if enemiesFolder.FindFirstChild(enemiesFolder, bossesOption2[1]) and not getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, CFrame.new(0, 0, 0))

                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end

                            if enemiesFolder.FindFirstChild(enemiesFolder, bossesOption2[1]) and getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, Vector3.new(0, 0, 0), mouse.Target)
                            
                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end           
                        end
                    end

                    return oldNamecall(event, ...)
                end)
            
                
            else 
                bossFarm = false 
                repeat task.wait()
                    if player.Character then 
                        local char = player.Character 
                        if char:FindFirstChild("HumanoidRootPart") then
                            local root = char.HumanoidRootPart 
                            if root:FindFirstChild("BodyVelocity") then 
                                root.BodyVelocity:Destroy()
                            end 
                        end
                    end
                until not player.Character.HumanoidRootPart:FindFirstChild("BodyVelocity")
                bossFarmLoop:Disconnect()
                chargeRemote:FireServer("ChargeEnd")
            end
        end, 
        })
    end 

    if game.PlaceId == 4180357500 then 
        local KrakenFarm = FarmsTab:CreateToggle({
        Name = "Kraken Farm",
        CurrentValue = false,
        Flag = "Kraken Farm", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
        Callback = function()
            if not krakenFarm then 
                krakenFarm = true 

                --Variables:
                local enemiesFolder = game.Workspace.Enemies 
                local enemyName = "Kraken"
                local magic = player.bin.Magic.Value 

                local magicPower = player.bin.MagicPower
                local oldNamecall 
                
                if magicPower.Value < 15 then 
                    StarterGui:SetCore("SendNotification", {
                        Title = "ERROR";
                        Text = "Your magic level has to be more than 15 to use this feature";
                        Duration = 3;
                    })        
                end       
                krakenFarmLoop = RunService.RenderStepped:Connect(function()
                    if magicPower.Value > 15 then 
                        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.Q, false, game)
                        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.Q, false, game)

                        if enemiesFolder:FindFirstChild(enemyName) and player.Character then 
                            local enemy = enemiesFolder[enemyName]
                            local character = player.Character

                            if player.Backpack:FindFirstChild(magic) then 
                                player.Backpack[magic].Parent = character 
                            end

                            if enemy:FindFirstChild("Humanoid") and character:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("HumanoidRootPart") then 
                                local rootPart = character.HumanoidRootPart

                                if not rootPart:FindFirstChild("BodyVelocity") then 
                                    local bodyVel = Instance.new("BodyVelocity", rootPart)

                                    bodyVel.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
                                    bodyVel.Velocity = Vector3.new(0,0,0)
                                end

                                local enemyRootPart = enemy.HumanoidRootPart
                                local enemyHumanoid = enemy.Humanoid 

                                if enemyHumanoid.Health <= 0 then 
                                    enemy:Destroy() 
                                end
                                
                                rootPart.CFrame = enemyRootPart.CFrame * CFrame.new(0, 0, 14)
                            end     
                        end
                    end
                end)

                local function getMagicType()
                    if magic == "Light" or magic == "Lightning" then 
                        return true 
                    else 
                        return false
                    end
                end

                oldNamecall = hookmetamethod(game, "__namecall", function(event, ...)
                    local method = getnamecallmethod()
                    if event.Name == magic and method == "FireServer" then 
                        local args = {...}

                        while krakenFarm and task.wait() do 
                            if enemiesFolder.FindFirstChild(enemiesFolder, enemyName) and not getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, CFrame.new(0, 0, 0))

                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end

                            if enemiesFolder.FindFirstChild(enemiesFolder, enemyName) and getMagicType() then
                                local magicEnergy = player.bin.MagicEnergy 
                                local maxMagicEnergy = magicPower.Value * 5 + 25 

                                event.FireServer(event, ...)
                                event.FireServer(event, args[1] + 1, Vector3.new(0, 0, 0), mouse.Target)
                            
                                if magicEnergy.Value <= maxMagicEnergy / 5 then 
                                    chargeRemote.FireServer(chargeRemote, "Charge") 
                                end 

                                if magicEnergy.Value >= maxMagicEnergy then 
                                    chargeRemote.FireServer(chargeRemote, "ChargeEnd")
                                end 
                            end           
                        end
                    end

                    return oldNamecall(event, ...)
                end)


            else 
                krakenFarm = false 
                krakenFarmLoop:Disconnect()
                repeat task.wait()
                    if player.Character then 
                        local char = player.Character 
                        if char:FindFirstChild("HumanoidRootPart") then
                            local root = char.HumanoidRootPart 
                            if root:FindFirstChild("BodyVelocity") then 
                                root.BodyVelocity:Destroy()
                            end 
                        end
                    end
                until not player.Character.HumanoidRootPart:FindFirstChild("BodyVelocity")
            end 
        end
        })
    end 
    local TeleportsTab = Window:CreateTab("Teleports")    
    local FirstSeaTeleport = TeleportsTab:CreateButton({
    Name = "Teleport To First Sea",
    Callback = function()
        if game.PlaceId ~= 3099893649 then 
            TeleportService:Teleport(3099893649)
        end 
    end,
    })
    local SecondSeaTeleport = TeleportsTab:CreateButton({
    Name = "Teleport To Second Sea",
    Callback = function()
        if game.PlaceId ~= 4180357500 then 
            TeleportService:Teleport(4180357500)
        end
    end,
    })
    local ThirdSeaTeleport = TeleportsTab:CreateButton({
    Name = "Teleport To Third Sea",
    Callback = function()
        if game.PlaceId ~= 4592306011 then 
            TeleportService:Teleport(4592306011)
        end
    end,
    })
    local ChatLogs = Window:CreateTab("Chat Logs") 
    for i,v in pairs(game.Players:GetPlayers()) do 
        v.Chatted:Connect(function(msg)
            local Chat = ChatLogs:CreateParagraph({Title = v.Name, Content = "Message: " .. msg})
        end)
    end
    game.Players.PlayerAdded:Connect(function(plr)
        plr.Chatted:Connect(function(msg)
            local Chat = ChatLogs:CreateParagraph({Title = plr.Name, Content = "Message: " .. msg})
        end)
    end)
end 
if game.PlaceId == 3527629287 then --big paintball support
    --Whitelist: 
    local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()
    local StarterGui = game:GetService("StarterGui")

    local httpRequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
    --Anti Afk:
    for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do 
        v:Disable()
    end 
    --Services:
    local RunService = game:GetService("RunService")
    local Lighting = game:GetService("Lighting")

    local Players = game:GetService("Players") 
    local Teams = game:GetService("Teams")

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local VirtualInputManager = game:GetService("VirtualInputManager") 

    local TeleportService = game:GetService("TeleportService")
    local TweenService = game:GetService("TweenService")

    local HttpService = game:GetService("HttpService")
    --Variables: 
    local camera = game.Workspace.Camera 
    local player = Players.LocalPlayer 
    local mouse = player:GetMouse() 

    --UI Library Functions: 
    local Window = Rayfield:CreateWindow({
    Name = "Anitsu Hub | Big Paintball",
    LoadingTitle = "Anitsu Hub",
    LoadingSubtitle = "by Anitsu",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "Anitsu Hub Configs", 
        FileName = "Anitsu Config [big paintball]"
    },
    })

    local Tab = Window:CreateTab("Main") 
    local LightingSection = Tab:CreateSection("Lighting")
    --Lighting Section: 

    local NoShadows = Tab:CreateToggle({
    Name = "No Shadows",
    CurrentValue = false,
    Flag = "No Shadows", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if Lighting.GlobalShadows then 
            Lighting.GlobalShadows = false 
        else 
            Lighting.GlobalShadows = true 
        end
    end,
    })

    local FullBright = Tab:CreateToggle({
    Name = "Full Bright",
    CurrentValue = false,
    Flag = "Full Bright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not fullBright then 
            fullBright = true 
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            fullBrightConnection = Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            end)
        else 
            fullBright = false 
            fullBrightConnection:Disconnect()
            Lighting.Ambient = Lighting.OutdoorAmbient
        end 
    end,
    })
    local AlwaysDay = Tab:CreateToggle({
    Name = "Always Day",
    CurrentValue = false,
    Flag = "Always Day", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not alwaysDay then 
            alwaysDay = true 
            Lighting.ClockTime = 10 
            Lighting.TimeOfDay = "10:00:00" 
            alwaysDayConnection = Lighting:GetPropertyChangedSignal("ClockTime"):Connect(function()
                Lighting.ClockTime = 10 
                Lighting.TimeOfDay = "10:00:00" 
            end)
        else 
            alwaysDay = false 
            alwaysDayConnection:Disconnect()
        end 
    end,
    })


    --Main Section: 
    local MainSection = Tab:CreateSection("Main")

    local SilentAim = Tab:CreateToggle({
    Name = "Silent Aim",
    CurrentValue = false,
    Flag = "Silent Aim", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not silentAim then 
            silentAim = true 
            local oldNamecall
            local function getNearestPlayerHead()
                local distance = math.huge 
                local closestPlayerHead = nil 
            
                for i, v in pairs(Players:GetPlayers()) do
                    if  v ~= player and v.Character then 
                        local enemyCharacter = v.Character
                        
                        if enemyCharacter:FindFirstChild("Head") then
                            local enemyHead = enemyCharacter.Head
                            local enemyHeadPosition, onScreen = camera:WorldToViewportPoint(enemyHead.Position)
                            
                            local distanceFromEnemy = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(enemyHeadPosition.X, enemyHeadPosition.Y)).Magnitude
                                
                            if distanceFromEnemy < distance then
                                distance = distanceFromEnemy
                                closestPlayerHead = enemyHead
                            end
                        end
                    end
                end
                
                return closestPlayerHead
            end

            silentCon = RunService.RenderStepped:Connect(function()
                head = getNearestPlayerHead()  

            end)

            oldNamecall = hookmetamethod(game, "__namecall", function(...)
                local method = getnamecallmethod()
                local callingScript = getcallingscript()
                
                if silentAim and method == "FindPartOnRayWithWhitelist" and head and tostring(callingScript) == "First Person Controller" then 
                    return head, head.Position, head.Material
                end
                return oldNamecall(...)
            end)        
        else 
            silentAim = false 
            silentCon:Disconnect()
        end 
    end,
    })
    local RejoinServer = Tab:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId,game.JobId)
    end,
    })
    local ForceReset = Tab:CreateButton({
    Name = "Force Reset",
    Callback = function()
        if player.Character then 
            local char = player.Character
            if char:FindFirstChild("Humanoid") then 
                char.Humanoid.Health = 0 
            end 
        end 
    end,
    })
    local ServerHop = Tab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local response = httpRequest({Url = "https://games.roblox.com/v1/games/".. game.PlaceId .. "/servers/0?sortOrder=2&excludeFullGames=true&limit=100"})
        local parsed = HttpService:JSONDecode(response.Body)
        local listOfServers = {}
        for i, v in pairs(parsed.data) do 
            local serverJobId = v.id 
            if serverJobId ~= game.JobId then 
                table.insert(listOfServers,serverJobId) 
            end 
        end 
        if #listOfServers == 0 then 
            StarterGui:SetCore("SendNotification", {
                Title = "ERROR";
                Text = "Couldn't find different servers";
                Duration = 3;
            })    
        else 
            local randomServer = math.random(1, #listOfServers) 
            TeleportService:TeleportToPlaceInstance(game.PlaceId,listOfServers[randomServer])        
        end 
    end,
    })
    local IY = Tab:CreateButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
    })
    --ESP Section:
    local ESPSection = Tab:CreateSection("ESP")
    local PlayerESP = Tab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "Player ESP", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not plrESP then 
            plrESP = true 
            local function createTextESP(enemyPlayer)
                local drawnESP = Drawing.new("Text")
                drawnESP.Visible = false 
                drawnESP.Center = true 
                drawnESP.Color = Color3.fromRGB(255)
                drawnESP.Outline = true 
                drawnESP.Font = 2
                drawnESP.Size = 13.5
                plrESPLoop = RunService.RenderStepped:Connect(function()    
                    if not plrESP then 
                        pcall(function()
                            drawnESP:Remove()
                            plrESPLoop:Disconnect()
                        end)
                    end
                    if enemyPlayer.Character then 
                        local enemyCharacter = enemyPlayer.Character 
                        if enemyCharacter:FindFirstChild("Head") and enemyCharacter:FindFirstChild("Humanoid") then 
                            local enemyHead = enemyCharacter.Head 
                            local enemyHumanoid = enemyCharacter.Humanoid 
                            local enemyHeadPos, onScreen = camera:WorldToViewportPoint(enemyHead.Position)

                            --ESP For Non-FFA
                            if onScreen and enemyPlayer.Team ~= player.Team and #Teams:GetChildren() > 0  then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y - 35)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen or enemyPlayer.Team == player.Team then 
                                drawnESP.Visible = false 
                            end

                            --ESP For FFA
                            if onScreen and #Teams:GetChildren() == 0 then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen then 
                                drawnESP.Visible = false 
                            end  
                        else 
                            drawnESP.Visible = false                          
                        end
                    else 
                        drawnESP.Visible = false 
                    end
                end)
            end --function end 
            for i, v in pairs(Players:GetPlayers()) do 
                if v ~= player then 
                    createTextESP(v)
                end
            end
            plrAddedConnection = Players.PlayerAdded:Connect(function(enemyPlayer)
                createTextESP(enemyPlayer)
            end)
        else 
            plrESP = false 
            plrAddedConnection:Disconnect()
        end 
    end,
    })    
end 
if game.PlaceId == 621129760 then --knife ability test kat 
    --Whitelist: 
    local Rayfield = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Rayfield/main/source"))()
    local StarterGui = game:GetService("StarterGui")
    local httpRequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
    --Anti Afk:
    for i,v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do 
        v:Disable()
    end 
    --Services:
    local RunService = game:GetService("RunService")
    local Lighting = game:GetService("Lighting")

    local Players = game:GetService("Players") 
    local Teams = game:GetService("Teams")

    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local VirtualInputManager = game:GetService("VirtualInputManager") 

    local TeleportService = game:GetService("TeleportService")
    local TweenService = game:GetService("TweenService")

    local HttpService = game:GetService("HttpService")
    --Variables: 
    local camera = game.Workspace.Camera 
    local player = Players.LocalPlayer 
    local mouse = player:GetMouse() 

    --UI Library Functions: 
    local Window = Rayfield:CreateWindow({
    Name = "Anitsu Hub | KAT",
    LoadingTitle = "Anitsu Hub",
    LoadingSubtitle = "by Anitsu",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "Anitsu Hub Configs", 
        FileName = "Anitsu Config [kat]"
    },
    })

    local Tab = Window:CreateTab("Main") 
    local LightingSection = Tab:CreateSection("Lighting")
    --Lighting Section: 

    local NoShadows = Tab:CreateToggle({
    Name = "No Shadows",
    CurrentValue = false,
    Flag = "No Shadows", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if Lighting.GlobalShadows then 
            Lighting.GlobalShadows = false 
        else 
            Lighting.GlobalShadows = true 
        end
    end,
    })

    local FullBright = Tab:CreateToggle({
    Name = "Full Bright",
    CurrentValue = false,
    Flag = "Full Bright", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not fullBright then 
            fullBright = true 
            Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            fullBrightConnection = Lighting:GetPropertyChangedSignal("Ambient"):Connect(function()
                Lighting.Ambient = Color3.fromRGB(255, 255, 255)
            end)
        else 
            fullBright = false 
            fullBrightConnection:Disconnect()
            Lighting.Ambient = Lighting.OutdoorAmbient
        end 
    end,
    })
    local AlwaysDay = Tab:CreateToggle({
    Name = "Always Day",
    CurrentValue = false,
    Flag = "Always Day", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not alwaysDay then 
            alwaysDay = true 
            Lighting.ClockTime = 10 
            Lighting.TimeOfDay = "10:00:00" 
            alwaysDayConnection = Lighting:GetPropertyChangedSignal("ClockTime"):Connect(function()
                Lighting.ClockTime = 10 
                Lighting.TimeOfDay = "10:00:00" 
            end)
        else 
            alwaysDay = false 
            alwaysDayConnection:Disconnect()
        end 
    end,
    })
    local aimpart = {"Torso"}

    --Main Section: 
    local MainSection = Tab:CreateSection("Main")
    local aimoption = Tab:CreateDropdown({
        Name = "Aim Part",
        Options = {"Torso", "Head","Random"},
        CurrentOption = {"Torso"},
        MultipleOptions = false,
        Flag = "Boss Farm Dropdown", 
        Callback = function(Option)
            aimpart = Option
        end,
    })
    local SilentAim = Tab:CreateToggle({
    Name = "Silent Aim",
    CurrentValue = false,
    Flag = "Silent Aim", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not silentAim then 
            silentAim = true 
            local oldNamecall
            local function getNearestPlayerHead()
                local distance = math.huge 
                local closestPlayerHead = nil 
            
                for i, v in pairs(Players:GetPlayers()) do
                    if  v ~= player and v.Character then 
                        local enemyCharacter = v.Character
                        
                        if enemyCharacter:FindFirstChild("Head") then
                            local enemyHead = enemyCharacter.Head
                            local enemyHeadPosition, onScreen = camera:WorldToViewportPoint(enemyHead.Position)
                            
                            local distanceFromEnemy = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(enemyHeadPosition.X, enemyHeadPosition.Y)).Magnitude
                                
                            if distanceFromEnemy < distance then
                                distance = distanceFromEnemy
                                closestPlayerHead = enemyHead
                            end
                        end
                    end
                end
                
                return closestPlayerHead
            end
            local function getNearestPlayerTorso()
                local distance = math.huge 
                local closestPlayerHead = nil 
            
                for i, v in pairs(Players:GetPlayers()) do
                    if  v ~= player and v.Character then 
                        local enemyCharacter = v.Character
                        
                        if enemyCharacter:FindFirstChild("HumanoidRootPart") then
                            local enemyHead = enemyCharacter.HumanoidRootPart
                            local enemyHeadPosition, onScreen = camera:WorldToViewportPoint(enemyHead.Position)
                            
                            local distanceFromEnemy = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(enemyHeadPosition.X, enemyHeadPosition.Y)).Magnitude
                                
                            if distanceFromEnemy < distance then
                                distance = distanceFromEnemy
                                closestPlayerHead = enemyHead
                            end
                        end
                    end
                end
                
                return closestPlayerHead
            end
            silentCon = RunService.RenderStepped:Connect(function()
                head = getNearestPlayerHead()  
                torso = getNearestPlayerTorso() 
            end)

            oldNamecall = hookmetamethod(game, "__namecall", function(...)
                local method = getnamecallmethod()
                local callingScript = getcallingscript()
                
                if silentAim and method == "FindPartOnRayWithIgnoreList" and aimpart[1] == "Head" and head and (tostring(callingScript) == "KnifeClient" or tostring(callingScript) == "RevolverClient") then 
                    return head, head.Position, head.Material
                end
                if silentAim and method == "FindPartOnRayWithIgnoreList" and aimpart[1] == "Torso" and torso and (tostring(callingScript) == "KnifeClient" or tostring(callingScript) == "RevolverClient") then 
                    return torso, torso.Position, torso.Material
                end
                if silentAim and method == "FindPartOnRayWithIgnoreList" and aimpart[1] == "Random" and head and torso and (tostring(callingScript) == "KnifeClient" or tostring(callingScript) == "RevolverClient") then 
                    local randomval = math.random(1,2)
                    if randomval == 1 then 
                        return torso, torso.Position, torso.Material
                    else 
                        return head, head.Position, head.Material                    
                    end 
                end
                return oldNamecall(...)
            end)        
        else 
            silentAim = false 
            silentCon:Disconnect()
        end 
    end,
    })
    local RejoinServer = Tab:CreateButton({
    Name = "Rejoin Server",
    Callback = function()
        TeleportService:TeleportToPlaceInstance(game.PlaceId,game.JobId)
    end,
    })
    local ServerHop = Tab:CreateButton({
    Name = "Server Hop",
    Callback = function()
        local response = httpRequest({Url = "https://games.roblox.com/v1/games/".. game.PlaceId .. "/servers/0?sortOrder=2&excludeFullGames=true&limit=100"})
        local parsed = HttpService:JSONDecode(response.Body)
        local listOfServers = {}
        for i, v in pairs(parsed.data) do 
            local serverJobId = v.id 
            if serverJobId ~= game.JobId then 
                table.insert(listOfServers,serverJobId) 
            end 
        end 
        if #listOfServers == 0 then 
            StarterGui:SetCore("SendNotification", {
                Title = "ERROR";
                Text = "Couldn't find different servers";
                Duration = 3;
            })    
        else 
            local randomServer = math.random(1, #listOfServers) 
            TeleportService:TeleportToPlaceInstance(game.PlaceId,listOfServers[randomServer])        
        end 
    end,
    })
    local IY = Tab:CreateButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
    })
    --ESP Section:
    local ESPSection = Tab:CreateSection("ESP")
    local PlayerESP = Tab:CreateToggle({
    Name = "Player ESP",
    CurrentValue = false,
    Flag = "Player ESP", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function()
        if not plrESP then 
            plrESP = true 
            local function createTextESP(enemyPlayer)
                local drawnESP = Drawing.new("Text")
                drawnESP.Visible = false 
                drawnESP.Center = true 
                drawnESP.Color = Color3.fromRGB(255)
                drawnESP.Outline = true 
                drawnESP.Font = 2
                drawnESP.Size = 13.5
                plrESPLoop = RunService.RenderStepped:Connect(function()    
                    if not plrESP then 
                        pcall(function()
                            drawnESP:Remove()
                            plrESPLoop:Disconnect()
                        end)
                    end
                    if enemyPlayer.Character then 
                        local enemyCharacter = enemyPlayer.Character 
                        if enemyCharacter:FindFirstChild("Head") and enemyCharacter:FindFirstChild("Humanoid") then 
                            local enemyHead = enemyCharacter.Head 
                            local enemyHumanoid = enemyCharacter.Humanoid 
                            local enemyHeadPos, onScreen = camera:WorldToViewportPoint(enemyHead.Position)

                            --ESP For Non-FFA
                            if onScreen and enemyPlayer.Team ~= player.Team and #Teams:GetChildren() > 0  then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y - 35)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen or enemyPlayer.Team == player.Team then 
                                drawnESP.Visible = false 
                            end

                            --ESP For FFA
                            if onScreen and #Teams:GetChildren() == 0 then 
                                drawnESP.Visible = true 
                                drawnESP.Position = Vector2.new(enemyHeadPos.X, enemyHeadPos.Y)
                                drawnESP.Text = "[" .. tostring(enemyPlayer) .. "]" .. "[" .. math.floor(player:DistanceFromCharacter(enemyHead.Position)) .. "]\n[" .. math.floor(enemyHumanoid.Health) .. "/" .. math.floor(enemyHumanoid.MaxHealth) .. "]"
                                
                            elseif not onScreen then 
                                drawnESP.Visible = false 
                            end  
                        else 
                            drawnESP.Visible = false                          
                        end
                    else 
                        drawnESP.Visible = false 
                    end
                end)
            end --function end 
            for i, v in pairs(Players:GetPlayers()) do 
                if v ~= player then 
                    createTextESP(v)
                end
            end
            plrAddedConnection = Players.PlayerAdded:Connect(function(enemyPlayer)
                createTextESP(enemyPlayer)
            end)
        else 
            plrESP = false 
            plrAddedConnection:Disconnect()
        end 
    end,
    })    
end 

queueonteleport([[
    local httprequest2 = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request
    loadstring(httprequest2({Url = "https://raw.githubusercontent.com/Anitsu/Rayfield-UI/main/anitsu%20hub"}).Body)()
]])
